import {createSlice, nanoid} from '@reduxjs/toolkit';

//nanoid generates unique ids

//State Initialization: When the Redux store is first initialized, initialState defines the default state of the todos slice. This means that when the application starts, the state will have one todo item with the text "Hello world" and an ID of 1.


const initialState = {
    todos : [{id:1,text:"Hello world"}]
}


//createSlice is a function provided by @reduxjs/toolkit that simplifies the process of writing Redux reducers and actions.

//It allows you to define a "slice" of the Redux state, along with the reducers (functions that specify how the state changes in response to actions) and the action creators (functions that generate action objects to be dispatched).

//createSlice -> A function that accepts an initial state, an object of reducer functions, and a "slice name", and automatically generates action creators and action types that correspond to the reducers and state.

// Represents the dispatched action. action.payload contains the data passed when the action was dispatched, which is the text of the new todo item.

//state: Represents the current state of the slice. In this case, state.todos is the array of todo items.

//removeTodo: This reducer is responsible for removing a todo item from the todos array based on its id

//state.todos.filter((todo) => todo.id !== action.payload): This line filters the todos array, keeping only the items whose id does not match the id passed in action.payload.


//removeTodo: Removes a todo item from the list based on the id provided in the action's payload.

export const todoSlice = createSlice({
    name : 'todo',
    initialState,
    reducers:{
        addTodo: (state,action) => {
            const todo = {
                id : nanoid(),
                text : action.payload
            }
            state.todos.push(todo)
        },
        removeTodo: (state,action) => {
            state.todos = state.todos.filter((todo) => todo.id !== action.payload)
        },
    }
})


//Action Creators: These functions allow you to dispatch actions that trigger state changes defined in your reducers.

//export const { addTodo, removeTodo } = todosSlice.actions; is used to export the action creators generated by the createSlice function. 


//export individual reducer

export const {addTodo,removeTodo} = todoSlice.actions


//export default todosSlice.reducer; is used to export the reducer function created by the createSlice

//export reducer

export default todoSlice.reducer